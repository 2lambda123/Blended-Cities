#examples :
# lines below can be parsed directly in the console
# after you created a building from an outline
# use it for debug also :)

city = bpy.context.scene.city

# from an object, retrieve the corresponding element
obj = bpy.context.active_object
elm, otl= city.elementGet(obj)

objname = 'buildings.00000'
elm, otl = city.elementGet(objname)

# returns the internal name of the element :
elm.name

# returns its class :
elm.className()

# retrieve elements from collection :
elm = city.elements['buildings.00000']
elm.className() #'elements'

otl.className() # 'outlines'

# retrieve elements from collections :
elm = city.elements['elements.00000']
otl = city.outlines['outlines.00000']
blg = city.builders.buildings['buildings.00000']
blg.className() # 'buildings'

# returns the outline of blg
blg.peer()

# returns the builder of otl
otl.peer()

# when it an Element, returns the builder too
elm.peer()

# returns the element as Element, whatever self is
otl.asElement()

# as outline
blg.asOutline()

# as builder
elm.asBuilder()

